# Dockerfile generated by script
ARG ubuntu_version_code=noble

FROM alpine/curl:8.12.1 AS downloader

ARG DB_LANG=en

SHELL [ "/bin/ash", "-eo", "pipefail", "-c" ]

RUN mkdir -p /var/www && \
    curl -sL https://simplerisk-downloads.s3.amazonaws.com/public/bundles/simplerisk-20250411-001.tgz | tar xz -C /var/www && \
    curl -sL "https://github.com/simplerisk/database/raw/master/simplerisk-$DB_LANG-20250411-001.sql" > /simplerisk.sql

# Using Ubuntu image
FROM ubuntu:${ubuntu_version_code}

ENV version=20250411-001

# Maintained by SimpleRisk
LABEL maintainer="Simplerisk <support@simplerisk.com>"

SHELL [ "/bin/bash", "-o", "pipefail", "-c" ]

# Make necessary directories
RUN mkdir -p /configurations \
	     /etc/apache2/ssl \
	     /passwords \
	     /var/log/supervisor \
	     /var/lib/mysql \
	     /var/run/supervisor \
	     /var/www/simplerisk

# Installing apt dependencies     
RUN dpkg-divert --local --rename /usr/bin/ischroot && \
    ln -sf /bin/true /usr/bin/ischroot && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends apache2 \
                                                                              php \
                                                                              php-mysql \
                                                                              php-json \
                                                                              php-dev \
                                                                              php-ldap \
                                                                              php-mbstring \
                                                                              php-curl \
                                                                              php-zip \
                                                                              php-gd \
                                                                              php-intl \
                                                                              php-xml \
                                                                              mysql-client \
                                                                              mysql-server \
                                                                              nfs-common \
                                                                              chrony \
                                                                              cron \
                                                                              vim-tiny \
                                                                              sendmail \
                                                                              openssl \
                                                                              ufw \
                                                                              supervisor && \
    rm -rf /var/lib/apt/lists

# Create the OpenSSL password
RUN echo "$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32})" > /passwords/pass_openssl.txt

# Install common files
COPY common/ /
COPY --from=downloader /var/www/simplerisk /var/www/simplerisk
COPY --from=downloader /simplerisk.sql /simplerisk.sql

# Configure MySQL
RUN sed -i 's/\[mysqld\]/\[mysqld\]\nsql-mode="NO_ENGINE_SUBSTITUTION"/g' /etc/mysql/mysql.conf.d/mysqld.cnf

# Configure Apache
RUN php_version="$(php -v | grep -oP '^PHP \K[0-9]+\.[0-9]+')" && \
    sed -i 's/\(upload_max_filesize =\) .*\(M\)/\1 5\2/g' "/etc/php/$php_version/apache2/php.ini" && \
    sed -i 's/\(memory_limit =\) .*\(M\)/\1 256\2/g' "/etc/php/$php_version/apache2/php.ini" && \
    sed -i 's/;.*\(max_input_vars =\) .*/\1 3000/g' "/etc/php/$php_version/apache2/php.ini" && \
    sed -i 's/;.*\(display_errors =\) .*/\1 Off/g' "/etc/php/$php_version/apache2/php.ini"

# Create SSL Certificates for Apache SSL
RUN mkdir -p /etc/apache2/ssl/ssl.crt /etc/apache2/ssl/ssl.key && \
    openssl genrsa -des3 -passout file:/passwords/pass_openssl.txt -out /etc/apache2/ssl/ssl.key/simplerisk.pass.key && \
    openssl rsa -passin file:/passwords/pass_openssl.txt -in /etc/apache2/ssl/ssl.key/simplerisk.pass.key -out /etc/apache2/ssl/ssl.key/simplerisk.key && \
    rm /etc/apache2/ssl/ssl.key/simplerisk.pass.key && \
    openssl req -new -key /etc/apache2/ssl/ssl.key/simplerisk.key -out  /etc/apache2/ssl/ssl.crt/simplerisk.csr -subj "/CN=simplerisk" && \
    openssl x509 -req -days 365 -in /etc/apache2/ssl/ssl.crt/simplerisk.csr -signkey /etc/apache2/ssl/ssl.key/simplerisk.key -out /etc/apache2/ssl/ssl.crt/simplerisk.crt

# Activate Apache modules
RUN phpenmod ldap && \
    a2enmod headers rewrite ssl && \
    a2enconf security && \
    sed -i 's/\(SSLProtocol\) all -SSLv3/\1 TLSv1.2/g' /etc/apache2/mods-enabled/ssl.conf && \
    sed -i 's/#\(SSLHonorCipherOrder on\)/\1/g' /etc/apache2/mods-enabled/ssl.conf && \
    sed -i 's/\(ServerTokens\) OS/\1 Prod/g' /etc/apache2/conf-enabled/security.conf && \
    sed -i 's/\(ServerSignature\) On/\1 Off/g' /etc/apache2/conf-enabled/security.conf

# Permissions
RUN chown -R www-data: /var/www/simplerisk

# Setting up cronjob
RUN echo "* * * * * /usr/bin/php -f /var/www/simplerisk/cron/cron.php > /dev/null 2>&1" >> /etc/cron.d/backup-cron && \
    chmod 0644 /etc/cron.d/backup-cron && \
    crontab /etc/cron.d/backup-cron

EXPOSE 80
EXPOSE 443

# Create the start script and set permissions
RUN chmod 755 /entrypoint.sh /etc/apache2/foreground.sh

# Data to save
VOLUME [ "/passwords", "/configurations", "/var/log", "/var/lib/mysql", "/etc/apache2/ssl", "/var/www/simplerisk" ]

# Setting up entrypoint
ENTRYPOINT [ "/entrypoint.sh" ]

HEALTHCHECK --interval=1m \
	CMD curl --fail http://localhost || exit 1

# Start Apache and MySQL
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
