name: Push resulting image to Github Packages

on:
  workflow_call:
    inputs:
      context_path:
        required: true
        type: string
      dockerfile_path:
        required: true
        type: string
      image_name:
        required: true
        type: string
      version:
        required: true
        type: string
      os_version:
        required: true
        type: string
      main_image:
        default: false
        type: boolean
      build_args:
        type: string

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository_owner }}/simplerisk"

jobs:
  github_packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3
      with:
        cosign-release: 'v2.2.0'

    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: "ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}"

    - name: Build and push main Docker image
      id: build-and-push-main
      if: ${{ inputs.main_image }}
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        file: ${{ inputs.dockerfile_path }}
        push: ${{ github.event_name != 'pull_request' }}
        build-args: ${{ inputs.build_args || '' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Sign the resulting Docker image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data.  If you would like to publish
    # transparency data even for private images, pass --yes to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published Docker image
      if: ${{ inputs.main_image && github.event_name != 'pull_request' }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push-main.outputs.digest }}

    - name: Build and push specific Docker image
      id: build-and-push-spec
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        file: ${{ inputs.dockerfile_path }}
        push: ${{ github.event_name != 'pull_request' }}
        build-args: ${{ inputs.build_args || '' }}
        tags: |
          ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.version }}-${{ inputs.os_version }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Sign the resulting Docker image digest except on PRs.
    # This will only write to the public Rekor transparency log when the Docker
    # repository is public to avoid leaking data.  If you would like to publish
    # transparency data even for private images, pass --yes to cosign below.
    # https://github.com/sigstore/cosign
    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      # This step uses the identity token to provision an ephemeral certificate
      # against the sigstore community Fulcio instance.
      run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push-spec.outputs.digest }}
